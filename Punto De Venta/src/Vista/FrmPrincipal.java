package Vista;

import DAO.DAOException;
import DAO.IDAOManager;
import DAOMySQL.MySQLDAOManager;
import Modelo.Cliente;
import Modelo.DetalleVenta;
import Modelo.Producto;
import Modelo.Usuario;
import Modelo.Venta;
import Reportes.GenerarReporte;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;

/**
 *
 * @author luisf
 */
public class FrmPrincipal extends javax.swing.JFrame {

    private String URLLogo = "/Imagenes/Logo.png";
    
    //El usuario que tiene la sesion iniciada
    Usuario usuarioActivo = null;
    private ProductosVentaTableModel model;
    private IDAOManager manager = null;
    private int[] idsClientes;
    
    /**
     * Creates new form FrmPrincipal
     */
    public FrmPrincipal() {
        initComponents();
    }
    
    public FrmPrincipal(Usuario usuarioActivo) {
        try {
            initComponents();
            //Configuramos el frame para que este maximizado y no se pueda cambiar
            //de tamaño
            Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
            this.setExtendedState(JFrame.MAXIMIZED_BOTH); 
            this.setSize(screenSize); 
            this.setPreferredSize(screenSize);
            this.setMinimumSize(screenSize);
            
            //Asignamos el icono de la aplicacion
            setIconImage(Toolkit.getDefaultToolkit().getImage(this.getClass().getResource(URLLogo)));
            
            //Guardamos el usuario activo y lo mostramos
            this.usuarioActivo = usuarioActivo;
            txtUsuario.setText(usuarioActivo.getNombre() + " " + usuarioActivo.getApellidos());
            
            //Inicializamos el manager
            manager = new MySQLDAOManager();
            
            //Inicializamos la tabla donde se muestran los productos de la venta
            inicializarListaProductos();
            
            //Se cargan los clientes en el combo box
            cargarClientes();
            
            //Se carga la fecha
            Date fecha = new Date();
            DateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy");
            txtFecha.setText(dateFormat.format(fecha));
            
            //Se carga el numero actual de venta
            txtNoVenta.setText(Integer.toString(manager.getVentaDAO().obtenerIdUltimaVenta() + 1));
            
            //Si el administrador (id ==1 ) es el que inicio sesion se habilita la
            //administracion de usuarios
            if(usuarioActivo.getIdUsuario() == 1) {
                btnAdminUsuarios.setEnabled(true);
            }
            
            //Se le asigna el focus al cuadro donde se ingresa el codigo del producto
            txtCodigo.requestFocus();
        } catch (DAOException ex) {
            imprimirMensajeDeErrorDAO(ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel4 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jToolBar1 = new javax.swing.JToolBar();
        btnAdminProductos = new javax.swing.JButton();
        btnAdminVentas = new javax.swing.JButton();
        btnAdminClientes = new javax.swing.JButton();
        btnAdminProveedores = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JToolBar.Separator();
        btnAdminUsuarios = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JToolBar.Separator();
        btnCerrarSesion = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        txtUsuario = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        cmbCliente = new javax.swing.JComboBox<>();
        jLabel11 = new javax.swing.JLabel();
        txtNoVenta = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        txtFecha = new javax.swing.JFormattedTextField();
        jPanel2 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        txtCodigo = new javax.swing.JTextField();
        btnAgregar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblProductos = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        lblNoDeProductos = new javax.swing.JLabel();
        btnEliminar = new javax.swing.JButton();
        lblTotal = new javax.swing.JLabel();
        btnCancelar = new javax.swing.JButton();
        btnConfirmar = new javax.swing.JButton();
        checkboxCredito = new javax.swing.JCheckBox();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Zapateria La Ciudad de León");
        setBackground(new java.awt.Color(195, 153, 62));
        setMinimumSize(new java.awt.Dimension(1009, 678));

        jPanel4.setBackground(new java.awt.Color(236, 214, 67));

        jPanel3.setBackground(new java.awt.Color(236, 214, 67));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED), "Acciones"));

        jToolBar1.setBackground(new java.awt.Color(236, 214, 67));
        jToolBar1.setFloatable(false);
        jToolBar1.setRollover(true);

        btnAdminProductos.setBackground(new java.awt.Color(195, 153, 62));
        btnAdminProductos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/producto.png"))); // NOI18N
        btnAdminProductos.setToolTipText("Administrar Productos");
        btnAdminProductos.setFocusable(false);
        btnAdminProductos.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnAdminProductos.setMaximumSize(new java.awt.Dimension(74, 74));
        btnAdminProductos.setMinimumSize(new java.awt.Dimension(74, 74));
        btnAdminProductos.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnAdminProductos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdminProductosActionPerformed(evt);
            }
        });
        jToolBar1.add(btnAdminProductos);

        btnAdminVentas.setBackground(new java.awt.Color(195, 153, 62));
        btnAdminVentas.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/ventas.png"))); // NOI18N
        btnAdminVentas.setToolTipText("Administrar Ventas");
        btnAdminVentas.setFocusable(false);
        btnAdminVentas.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnAdminVentas.setMaximumSize(new java.awt.Dimension(74, 74));
        btnAdminVentas.setMinimumSize(new java.awt.Dimension(74, 74));
        btnAdminVentas.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnAdminVentas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdminVentasActionPerformed(evt);
            }
        });
        jToolBar1.add(btnAdminVentas);

        btnAdminClientes.setBackground(new java.awt.Color(195, 153, 62));
        btnAdminClientes.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/cliente.png"))); // NOI18N
        btnAdminClientes.setToolTipText("Administrar Clientes");
        btnAdminClientes.setFocusable(false);
        btnAdminClientes.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnAdminClientes.setMaximumSize(new java.awt.Dimension(74, 74));
        btnAdminClientes.setMinimumSize(new java.awt.Dimension(74, 74));
        btnAdminClientes.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnAdminClientes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdminClientesActionPerformed(evt);
            }
        });
        jToolBar1.add(btnAdminClientes);

        btnAdminProveedores.setBackground(new java.awt.Color(195, 153, 62));
        btnAdminProveedores.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/proveedor.png"))); // NOI18N
        btnAdminProveedores.setToolTipText("Administrar Proveedores");
        btnAdminProveedores.setFocusable(false);
        btnAdminProveedores.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnAdminProveedores.setMaximumSize(new java.awt.Dimension(74, 74));
        btnAdminProveedores.setMinimumSize(new java.awt.Dimension(74, 74));
        btnAdminProveedores.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnAdminProveedores.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdminProveedoresActionPerformed(evt);
            }
        });
        jToolBar1.add(btnAdminProveedores);
        jToolBar1.add(jSeparator1);

        btnAdminUsuarios.setBackground(new java.awt.Color(195, 153, 62));
        btnAdminUsuarios.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/usuario.png"))); // NOI18N
        btnAdminUsuarios.setToolTipText("Administrar Usuarios");
        btnAdminUsuarios.setEnabled(false);
        btnAdminUsuarios.setFocusable(false);
        btnAdminUsuarios.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnAdminUsuarios.setMaximumSize(new java.awt.Dimension(74, 74));
        btnAdminUsuarios.setMinimumSize(new java.awt.Dimension(74, 74));
        btnAdminUsuarios.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnAdminUsuarios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdminUsuariosActionPerformed(evt);
            }
        });
        jToolBar1.add(btnAdminUsuarios);
        jToolBar1.add(jSeparator2);

        btnCerrarSesion.setBackground(new java.awt.Color(195, 153, 62));
        btnCerrarSesion.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/logout.png"))); // NOI18N
        btnCerrarSesion.setToolTipText("Cerrar Sesión");
        btnCerrarSesion.setFocusable(false);
        btnCerrarSesion.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnCerrarSesion.setMaximumSize(new java.awt.Dimension(74, 74));
        btnCerrarSesion.setMinimumSize(new java.awt.Dimension(74, 74));
        btnCerrarSesion.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnCerrarSesion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCerrarSesionActionPerformed(evt);
            }
        });
        jToolBar1.add(btnCerrarSesion);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, 90, Short.MAX_VALUE)
        );

        jPanel1.setBackground(new java.awt.Color(236, 214, 67));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED)));

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("Usuario:");

        txtUsuario.setBackground(new java.awt.Color(195, 153, 62));
        txtUsuario.setEnabled(false);

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel10.setText("Cliente:");

        cmbCliente.setBackground(new java.awt.Color(195, 153, 62));

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel11.setText("Número de Venta:");

        txtNoVenta.setBackground(new java.awt.Color(195, 153, 62));
        txtNoVenta.setEnabled(false);

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel12.setText("Fecha:");

        txtFecha.setBackground(new java.awt.Color(195, 153, 62));
        txtFecha.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(java.text.DateFormat.getDateInstance(java.text.DateFormat.LONG))));
        txtFecha.setEnabled(false);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmbCliente, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(58, 58, 58)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel11)
                    .addComponent(jLabel12))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtNoVenta, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                    .addComponent(txtFecha))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11)
                    .addComponent(txtNoVenta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(cmbCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12)
                    .addComponent(txtFecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(46, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(236, 214, 67));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED), "Producto", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 18))); // NOI18N

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("Codigo:");

        txtCodigo.setBackground(new java.awt.Color(195, 153, 62));

        btnAgregar.setBackground(new java.awt.Color(195, 153, 62));
        btnAgregar.setText("Agregar");
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });

        tblProductos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblProductos.getTableHeader().setResizingAllowed(false);
        tblProductos.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tblProductos);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("Productos:");

        lblNoDeProductos.setText("0");

        btnEliminar.setBackground(new java.awt.Color(195, 153, 62));
        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 971, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnAgregar)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblNoDeProductos, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnEliminar)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(txtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnAgregar))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 161, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(lblNoDeProductos)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnEliminar)))
                .addContainerGap())
        );

        lblTotal.setFont(new java.awt.Font("Tahoma", 0, 48)); // NOI18N
        lblTotal.setText("0.00");

        btnCancelar.setBackground(new java.awt.Color(195, 153, 62));
        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        btnConfirmar.setText("Confirmar");
        btnConfirmar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConfirmarActionPerformed(evt);
            }
        });

        checkboxCredito.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        checkboxCredito.setText("Venta a Credito");
        checkboxCredito.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkboxCreditoActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 48)); // NOI18N
        jLabel2.setText("$");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblTotal))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                                .addComponent(btnConfirmar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnCancelar))
                            .addComponent(checkboxCredito, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(10, 10, 10)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTotal)
                    .addComponent(jLabel2))
                .addGap(12, 12, 12)
                .addComponent(checkboxCredito)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCancelar)
                    .addComponent(btnConfirmar))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
        try {
            actualizarListaProductos();
            double total = 0;
            for(int i = 0; i < tblProductos.getRowCount(); i++) {
                total +=(double) tblProductos.getValueAt(i, 7);
            }
            lblTotal.setText(String.format("%.2f", total));
            lblNoDeProductos.setText(Integer.toString(Integer.parseInt(lblNoDeProductos.getText())+ 1));
            txtCodigo.selectAll();
            txtCodigo.requestFocus();
        } catch (DAOException ex) {
            imprimirMensajeDeErrorDAO(ex);
        }
    }//GEN-LAST:event_btnAgregarActionPerformed

    private void btnCerrarSesionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCerrarSesionActionPerformed
        int respuesta = JOptionPane.showConfirmDialog(null,
                    "¿Seguro que quieres cerrar Sesión?", "Confirmar", 0);
        if(respuesta == 0) {
            usuarioActivo = null;
            FrmLogin login = new FrmLogin();
            login.setVisible(true);
            this.dispose();
        }
    }//GEN-LAST:event_btnCerrarSesionActionPerformed

    private void btnAdminProductosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdminProductosActionPerformed
        JDInventario inventario = new JDInventario(this, true);
        inventario.setVisible(true);
    }//GEN-LAST:event_btnAdminProductosActionPerformed

    private void btnAdminVentasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdminVentasActionPerformed
        JDVentas ventas = new JDVentas(this, true);
        ventas.setVisible(true);
    }//GEN-LAST:event_btnAdminVentasActionPerformed

    private void btnAdminClientesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdminClientesActionPerformed
        try {
            throw new DAOException("No soportado aun.");
        } catch (DAOException ex) {
            imprimirMensajeDeErrorDAO(ex);
        }
    }//GEN-LAST:event_btnAdminClientesActionPerformed

    private void btnAdminProveedoresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdminProveedoresActionPerformed
        try {
            throw new DAOException("No soportado aun.");
        } catch (DAOException ex) {
            imprimirMensajeDeErrorDAO(ex);
        }
    }//GEN-LAST:event_btnAdminProveedoresActionPerformed

    private void btnAdminUsuariosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdminUsuariosActionPerformed
        DlgUsuarios usuarios = new DlgUsuarios(this, true);
        usuarios.setVisible(true);
    }//GEN-LAST:event_btnAdminUsuariosActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        inicializarListaProductos();
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void btnConfirmarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConfirmarActionPerformed
        try {
            if(tblProductos.getRowCount() == 0) {
                throw new DAOException("Debe ingresar al menos un producto");
            }
            else {
                Double pago = Double.parseDouble(JOptionPane.showInputDialog("Ingrese el monto de pago:"));
                
                if(pago > 0) {
                    Venta venta = new Venta();
                    List<DetalleVenta> detallesVenta = new ArrayList<>();
                    venta.setIdUsuario(usuarioActivo.getIdUsuario());
                    venta.setIdCliente(idsClientes[cmbCliente.getSelectedIndex()]);
                    venta.setFecha(new Date());
                    venta.setTotal(Double.parseDouble(lblTotal.getText()));
                    DetalleVenta detalle;
                    for( int i = 0; i < tblProductos.getRowCount(); i++ ) {
                        detalle = new DetalleVenta();
                        detalle.setCodigo((String) tblProductos.getValueAt(i, 0));
                        detalle.setCantidad((int) tblProductos.getValueAt(i, 6));
                        detalle.setPrecio((Double) tblProductos.getValueAt(i, 5));
                        detalle.setImporte((Double) tblProductos.getValueAt(i, 7));
                        detallesVenta.add(detalle);
                    }
                    venta.setDetallesVenta(detallesVenta);
                    if(checkboxCredito.isSelected()) {
                        if(cmbCliente.getSelectedIndex() != 0) {
                            venta.setTipoVenta("Credito");
                            Cliente cliente = manager.getClienteDAO().obtener(idsClientes[cmbCliente.getSelectedIndex()]);
                            cliente.setAdeudo(cliente.getAdeudo() + Double.parseDouble(lblTotal.getText()) - pago);
                            manager.getClienteDAO().modificar(cliente);
                        }
                        else {
                            throw new DAOException("No se puede dar credito a este usuario.");
                        }
                    }
                    else {
                        if(pago >= Double.parseDouble(lblTotal.getText())) {
                            venta.setTipoVenta("Contado");
                        }
                        else {
                            throw new DAOException("El pago no alcanza a cubrir el total.");
                        }
                    }
                    venta.setIdVenta(manager.getVentaDAO().insertar(venta));
                    decrementarExistencias();
                    new GenerarReporte( venta.getIdVenta(), pago, venta.getTipoVenta());
                    inicializarListaProductos();
                }
                else {
                    throw new DAOException("El pago no puede ser 0 o menos");
                }
            }
        } catch (DAOException ex) {
            imprimirMensajeDeErrorDAO(ex);
        }
    }//GEN-LAST:event_btnConfirmarActionPerformed

    private void checkboxCreditoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkboxCreditoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_checkboxCreditoActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        if(JOptionPane.showConfirmDialog(null, "¿Desea eliminar el producto?", 
                "Eliminar de la lista", JOptionPane.YES_NO_OPTION, 
                JOptionPane.QUESTION_MESSAGE) == JOptionPane.YES_OPTION) {
            model.removeRow(tblProductos.getSelectedRow());
            model.fireTableDataChanged();
        }
    }//GEN-LAST:event_btnEliminarActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdminClientes;
    private javax.swing.JButton btnAdminProductos;
    private javax.swing.JButton btnAdminProveedores;
    private javax.swing.JButton btnAdminUsuarios;
    private javax.swing.JButton btnAdminVentas;
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnCerrarSesion;
    private javax.swing.JButton btnConfirmar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JCheckBox checkboxCredito;
    private javax.swing.JComboBox<String> cmbCliente;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JToolBar.Separator jSeparator1;
    private javax.swing.JToolBar.Separator jSeparator2;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JLabel lblNoDeProductos;
    private javax.swing.JLabel lblTotal;
    private javax.swing.JTable tblProductos;
    private javax.swing.JTextField txtCodigo;
    private javax.swing.JFormattedTextField txtFecha;
    private javax.swing.JTextField txtNoVenta;
    private javax.swing.JTextField txtUsuario;
    // End of variables declaration//GEN-END:variables

    /**
    * inicializa la tabla tblProductos
    **/
    private void inicializarListaProductos() {
        model = new ProductosVentaTableModel ();
        
        //asignamos el modelo pero sin llamar al metodo actualizar
        //ya que al iniciar el id. Autor es -1
        tblProductos.setModel(model);
        model.cleanModel();
        
        //redimensionamos las celdas
        setJTableColumnsWidth(tblProductos, 640, 80,80,150,80,80,60,50,60 );
        
        lblTotal.setText("0.00");
        lblNoDeProductos.setText("0");
        txtCodigo.setText("");
        txtCodigo.requestFocus();
        checkboxCredito.setSelected(false);
    }

    /**
     * actualiza el contenido de la tabla tblProductos
     * @param idAutor parametro para realizar la busqueda de titulos por autor
     **/
    private void actualizarListaProductos() throws DAOException {
        /*
        * Si no hay ningun error actualizamos la tabla
        * para mostrar los libros de este autor
        */
        model.updateModel(txtCodigo.getText());
        
        //hacemos que se reflejen los cambios
        model.fireTableDataChanged();
        
        //redimencionamos la celda
        setJTableColumnsWidth(tblProductos, 640, 80,80,150,80,80,60,50,60 );
    }

    public static void setJTableColumnsWidth(JTable table, int tablePreferredWidth,
            double... percentages) {
        double total = 0;
        for (int i = 0; i < table.getColumnModel().getColumnCount(); i++) {
            total += percentages[i];
        }
        
        for(int i = 0; i < table.getColumnModel().getColumnCount(); i++) {
            TableColumn column = table.getColumnModel().getColumn(i);
            column.setPreferredWidth((int)
                    (tablePreferredWidth * (percentages[i] / total)));
        }
    }//fin del metodo setJTable
    
    public void cargarClientes (){
        try {
            ArrayList<Cliente> clientes = new ArrayList<>();
            clientes = (ArrayList<Cliente>) manager.getClienteDAO().obtenerTodos();
            idsClientes = new int [clientes.size()];
            for (Cliente cliente : clientes) {
                cmbCliente.addItem(cliente.getIdCliente() + " - " + cliente.getNombre() + " " + cliente.getApellidos());
                idsClientes[cmbCliente.getItemCount()-1] = cliente.getIdCliente();
            }
        } catch (DAOException ex) {
            imprimirMensajeDeErrorDAO(ex);
        } catch (NullPointerException ex) {
            JOptionPane.showMessageDialog(null, 
                "No se ha podido cargar los usuarios." + "\n" + 
                    "Vuelve a intentarlo.",
                "Error", JOptionPane.ERROR_MESSAGE);
            System.exit(0);
        }
    }
    
    private void imprimirMensajeDeErrorDAO(DAOException ex) {
        //Si getMessage existe obtendremos su valor
        String mensajeError;
        
        try {
            mensajeError = "Mensaje: " + ex.getCause().getMessage();
        }
        catch (NullPointerException error) {
            mensajeError = "";
        }
        
        JOptionPane.showMessageDialog(null, 
                ex.getMessage() + "\n" + 
                    mensajeError,
                "Error", JOptionPane.ERROR_MESSAGE);
    }
    
    public void decrementarExistencias() throws DAOException {
        for(int i = 0; i < tblProductos.getRowCount(); i++) {
            Producto producto = manager.getProductoDAO().obtener((String) tblProductos.getValueAt(i, 0));
            producto.setExistencias(producto.getExistencias() -(int) tblProductos.getValueAt(i, 6));
            manager.getProductoDAO().modificar(producto);
        }
    }
}
